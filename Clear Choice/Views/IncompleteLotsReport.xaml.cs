using System;
using System.Collections;
using System.Collections.ObjectModel;
using System.Resources;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using ClearChoice;
using ExceptionLogging;
using Stemstudios.DataAccessLayer;
using Stemstudios.DataAccessLayer.DataObjects;
using Stemstudios.DataAccessLayer.DataObjects.Bindings;

namespace Clear_Choice.Views
{
    /// <summary>
    /// Interaction logic for ListofInventory.xaml
    /// </summary>
    public partial class IncompletedLotsReport : UserControl
    {
        private Database db = Database.Instance;
        private DataSet itemRecords = null;
        private ResourceManager msgCodes = MessageCodes.ResourceManager;

        public IncompletedLotsReport()
        {
            InitializeComponent();
            loadTable();
            this.Name = "ActiveLotReport";
        }

        private void loadTable()
        {
            try
            {
                DataSet data = db.Select("*", Lot.Table, Lot.Fields.Completed.ToString() + " = 0", Lot.Fields.Address.ToString() + "," + Lot.Fields.LotNumber.ToString());

                data.BuildPrimaryKeyIndex(Lot.PrimaryKey);
                Collection<LotBinding> gridData = data.getBindableCollection<LotBinding>();
                dgLotsCompleted.ItemsSource = gridData;

                itemRecords = data;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Loading Lots - " + msgCodes.GetString("M2102") + ex.Message, "Error - 2102", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        private void dgLotsCompleted_MouseDown(object sender, MouseButtonEventArgs e)
        {
            if (e.ClickCount == 2)
            {
                if (dgLotsCompleted.SelectedCells.Count > 0)
                {
                        LotBinding obj = (LotBinding)dgLotsCompleted.SelectedCells[0].Item;
                        itemRecords.SeekToPrimaryKey(obj.lotID);
                        Lot lotObj = new Lot(itemRecords.GetRecordDataSet());
                        MainWindow.OpenTab(new LotView(lotObj), (Image)App.iconSet["home"], lotObj.LotDisplayName());
                }
            }
        }

        private void UserControl_IsVisibleChanged(object sender, DependencyPropertyChangedEventArgs e)
        {
            if (IsVisible)
            {
                MainWindow.setActionList(new ArrayList());
            }
        }

        private void dgLotsCompleted_AutoGeneratedColumns(object sender, EventArgs e)
        {
            Hashtable textMap = LotBinding.getdisplayTextMap();
            foreach (DataGridColumn column in dgLotsCompleted.Columns)
            {
                int index = dgLotsCompleted.Columns.IndexOf(column);
                String headerText = column.Header.ToString();
                if (headerText.Contains("ID"))
                {
                    dgLotsCompleted.Columns[index].Visibility = System.Windows.Visibility.Collapsed;
                }
                else
                {
                    if (textMap.ContainsKey(headerText))
                    {
                        dgLotsCompleted.Columns[index].Header = textMap[headerText];
                    }
                }
            }
        }
    }
}
