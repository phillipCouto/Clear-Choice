using System;
using System.Collections;
using System.Collections.ObjectModel;
using System.Resources;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using System.Windows.Threading;
using ExceptionLogging;
using Stemstudios.DataAccessLayer;
using Stemstudios.DataAccessLayer.DataObjects;
using Stemstudios.DataAccessLayer.DataObjects.Bindings;
using ClearChoice;

namespace Clear_Choice.Views
{
    /// <summary>
    /// Interaction logic for LowAmountInvReport.xaml
    /// </summary>
    public partial class LowAmountInvReport : UserControl
    {
        private Database db = Database.Instance;
        private DataSet itemRecords = null;
        private ResourceManager msgCodes = MessageCodes.ResourceManager;

        public LowAmountInvReport()
        {
            InitializeComponent();
            LoadItems();
            this.Name = "LowStockReport";
        }

        private void LoadItems()
        {
            try
            {
                DataSet data = db.Select("*", InventoryItem.Table, InventoryItem.Fields.Quantity.ToString()+" < 5");

                data.BuildPrimaryKeyIndex(InventoryItem.PrimaryKey);
                Collection<InventoryItemBinding> gridData = data.getBindableCollection<InventoryItemBinding>();
                DispatcherOperation dataOp = Dispatcher.BeginInvoke(DispatcherPriority.Normal, new Action<Collection<InventoryItemBinding>>(setDataGridViewData), gridData);

                itemRecords = data;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Loading Inventory Items - " + msgCodes.GetString("M2102") + ex.Message, "Error - 2102", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        private void setDataGridViewData(Collection<InventoryItemBinding> data)
        {
            this.dgInventory.ItemsSource = data;
        }

        private void txtOkay_Click(object sender, RoutedEventArgs e)
        {
try
            {
                DataSet data = db.Select("*", InventoryItem.Table, InventoryItem.Fields.Quantity.ToString()+" < " + txtQuantity.Text + " ");

                data.BuildPrimaryKeyIndex(InventoryItem.PrimaryKey);
                Collection<InventoryItemBinding> gridData = data.getBindableCollection<InventoryItemBinding>();
                DispatcherOperation dataOp = Dispatcher.BeginInvoke(DispatcherPriority.Normal, new Action<Collection<InventoryItemBinding>>(setDataGridViewData), gridData);

                itemRecords = data;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Loading Inventory Items - " + msgCodes.GetString("M2102") + ex.Message, "Error - 2102", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }

        private void dgInventory_AutoGeneratedColumns(object sender, EventArgs e)
        {
            Hashtable textMap = InventoryItemBinding.getDisplayTextMap();
            foreach (DataGridColumn column in dgInventory.Columns)
            {
                int index = dgInventory.Columns.IndexOf(column);
                String headerText = column.Header.ToString();
                if (textMap.ContainsKey(headerText))
                {
                    dgInventory.Columns[index].Header = textMap[headerText];
                }
            }
        }

        private void UserControl_IsVisibleChanged(object sender, DependencyPropertyChangedEventArgs e)
        {
            if (IsVisible)
            {
                MainWindow.setActionList(new System.Collections.ArrayList());
            }
        }
    }
}
